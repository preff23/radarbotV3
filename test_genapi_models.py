#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –≤ gen-api.ru
"""
import asyncio
import aiohttp
import json
import os
from dotenv import load_dotenv

load_dotenv()

async def test_genapi_models():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ –≤ gen-api.ru"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ –≤ gen-api.ru...")
    
    api_key = os.getenv("OPENAI_API_KEY", "sk-3lObctPRQiG7Pal1iDyiwQjdcipcvJRHDqvrbFGTmBeK735FUOS9sFevOBYa")
    base_url = "https://api.gen-api.ru/api/v1"
    
    # –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö network_id –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    possible_networks = [
        "chat-gpt-3",
        "chat-gpt-4", 
        "chat-gpt-4o",
        "chat-gpt-5",
        "gpt-4",
        "gpt-4o",
        "gpt-5",
        "openai-gpt-4",
        "openai-gpt-5"
    ]
    
    async with aiohttp.ClientSession() as session:
        for network_id in possible_networks:
            print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º network_id: {network_id}")
            
            try:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
                url = f"{base_url}/networks/{network_id}"
                headers = {
                    "Authorization": f"Bearer {api_key}",
                    "Content-Type": "application/json"
                }
                
                data = {
                    "messages": [
                        {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"}
                    ],
                    "prompt": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
                    "max_tokens": 50,
                    "temperature": 0.7
                }
                
                async with session.post(url, headers=headers, json=data, timeout=10) as response:
                    if response.status == 200:
                        result = await response.json()
                        print(f"‚úÖ {network_id}: –†–∞–±–æ—Ç–∞–µ—Ç! –°—Ç–∞—Ç—É—Å: {result.get('status', 'unknown')}")
                        
                        # –ï—Å–ª–∏ –µ—Å—Ç—å request_id, –ø—Ä–æ–≤–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        if 'request_id' in result:
                            request_id = result['request_id']
                            print(f"   üìù Request ID: {request_id}")
                            
                            # –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞
                            status_url = f"{base_url}/request/get/{request_id}"
                            async with session.get(status_url, headers=headers, timeout=10) as status_response:
                                if status_response.status == 200:
                                    status_result = await status_response.json()
                                    print(f"   üìä –°—Ç–∞—Ç—É—Å: {status_result.get('status', 'unknown')}")
                                    if status_result.get('result'):
                                        print(f"   üí¨ –û—Ç–≤–µ—Ç: {status_result['result'][:100]}...")
                    else:
                        print(f"‚ùå {network_id}: –û—à–∏–±–∫–∞ {response.status}")
                        
            except Exception as e:
                print(f"‚ùå {network_id}: –ò—Å–∫–ª—é—á–µ–Ω–∏–µ - {e}")

if __name__ == "__main__":
    asyncio.run(test_genapi_models())
