#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è –±–µ–∑ OCR –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º
"""
import asyncio
import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from bot.analytics.portfolio_analyzer import PortfolioAnalyzer
from bot.core.db import db_manager, User, PortfolioAccount, PortfolioHoldingV2, PortfolioCashPosition

async def test_analysis():
    """–¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å –≥–æ—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("üîç –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_user = User(
        telegram_id=999999999,
        phone_number="+7999999999",
        first_name="Test",
        last_name="User",
        created_at=datetime.now()
    )
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
    test_account = PortfolioAccount(
        user_id=test_user.id,
        account_id="test_debug_account",
        account_name="Test Account",
        portfolio_value=100000.0,
        created_at=datetime.now()
    )
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –æ–±–ª–∏–≥–∞—Ü–∏–∏
    test_holdings = [
        PortfolioHoldingV2(
            user_id=test_user.id,
            account_internal_id=test_account.id,
            raw_name="–ë—ã—Å—Ç—Ä–æ–¥–µ–Ω—å–≥–∏ 002–†-08",
            normalized_name="–ë—ã—Å—Ç—Ä–æ–¥–µ–Ω—å–≥–∏ 002–†-08",
            normalized_key="–ë—ã—Å—Ç—Ä–æ–¥–µ–Ω—å–≥–∏ 002–†-08",
            raw_isin="RU000A103ZJ0",
            isin="RU000A103ZJ0",
            raw_ticker="–ë—ã—Å—Ç—Ä–æ–¥–µ–Ω—å–≥–∏ 002–†-08",
            ticker="–ë—ã—Å—Ç—Ä–æ–¥–µ–Ω—å–≥–∏ 002–†-08",
            raw_type="bond",
            security_type="bond",
            raw_quantity=5,
            created_at=datetime.now()
        ),
        PortfolioHoldingV2(
            user_id=test_user.id,
            account_internal_id=test_account.id,
            raw_name="–ö–õ–°-–¢—Ä–µ–π–¥ –ë–û-03",
            normalized_name="–ö–õ–°-–¢—Ä–µ–π–¥ –ë–û-03",
            normalized_key="–ö–õ–°-–¢—Ä–µ–π–¥ –ë–û-03",
            raw_isin="RU000A0JXTS8",
            isin="RU000A0JXTS8",
            raw_ticker="–ö–õ–°-–¢—Ä–µ–π–¥ –ë–û-03",
            ticker="–ö–õ–°-–¢—Ä–µ–π–¥ –ë–û-03",
            raw_type="bond",
            security_type="bond",
            raw_quantity=25,
            created_at=datetime.now()
        )
    ]
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –Ω–∞–ª–∏—á–Ω–æ—Å—Ç—å
    test_cash = PortfolioCashPosition(
        user_id=test_user.id,
        account_internal_id=test_account.id,
        raw_name="RUB",
        currency="RUB",
        amount=50000.0,
        created_at=datetime.now()
    )
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        session = db_manager.SessionLocal()
        
        # –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        session.add(test_user)
        session.commit()
        session.refresh(test_user)
        
        # –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º user_id
        test_account.user_id = test_user.id
        session.add(test_account)
        session.commit()
        session.refresh(test_account)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º user_id –≤ –æ–±–ª–∏–≥–∞—Ü–∏—è—Ö –∏ –Ω–∞–ª–∏—á–Ω–æ—Å—Ç–∏
        for holding in test_holdings:
            holding.user_id = test_user.id
            holding.account_internal_id = test_account.id
            session.add(holding)
        
        test_cash.user_id = test_user.id
        test_cash.account_internal_id = test_account.id
        session.add(test_cash)
        
        session.commit()
        session.close()
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {test_user.id}")
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç ID: {test_account.id}")
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(test_holdings)} –æ–±–ª–∏–≥–∞—Ü–∏–π")
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞–ª–∏—á–Ω–æ—Å—Ç—å: {test_cash.amount} {test_cash.currency}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
        print("\nüöÄ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞...")
        start_time = datetime.now()
        
        analyzer = PortfolioAnalyzer()
        result = await analyzer.run_analysis(test_user.id)
        
        end_time = datetime.now()
        duration = (end_time - start_time).total_seconds()
        
        print(f"\n‚è±Ô∏è –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {duration:.2f} —Å–µ–∫—É–Ω–¥")
        
        if "error" in result:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {result['error']}")
            print(f"üìù –î–µ—Ç–∞–ª–∏: {result.get('summary', '–ù–µ—Ç –¥–µ—Ç–∞–ª–µ–π')}")
        else:
            print("‚úÖ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç {len(result)} –∫–ª—é—á–µ–π")
            for key in result.keys():
                print(f"  - {key}")
        
        return result
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return None
    
    finally:
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        try:
            session = db_manager.SessionLocal()
            session.query(PortfolioHoldingV2).filter(PortfolioHoldingV2.user_id == test_user.id).delete()
            session.query(PortfolioCashPosition).filter(PortfolioCashPosition.user_id == test_user.id).delete()
            session.query(PortfolioAccount).filter(PortfolioAccount.user_id == test_user.id).delete()
            session.query(User).filter(User.id == test_user.id).delete()
            session.commit()
            session.close()
            print("üßπ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")

if __name__ == "__main__":
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑—ã
    os.environ['DATABASE_URL'] = 'sqlite:///test_debug.db'
    
    # –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º db_manager —Å —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑–æ–π
    from bot.core.db import DatabaseManager
    db_manager = DatabaseManager()
    
    asyncio.run(test_analysis())
