#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤—ã–ø–ª–∞—Ç –≤ PortfolioAnalyzer
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/Users/goretofff/Desktop/radar3.0')

from bot.analytics.portfolio_analyzer import PortfolioAnalyzer
from bot.core.logging import get_logger

logger = get_logger(__name__)

async def test_calendar_direct():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤—ã–ø–ª–∞—Ç"""
    print("üîç –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤—ã–ø–ª–∞—Ç...")
    
    analyzer = PortfolioAnalyzer()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–Ω–∞–ø—à–æ—Ç—ã —Å –æ–±–ª–∏–≥–∞—Ü–∏—è–º–∏
    from bot.providers.moex_iss.models import BondSnapshot
    from datetime import datetime
    
    test_snapshots = [
        BondSnapshot(
            secid="RU000A10B2M3",
            shortname="–ë—ã—Å—Ç—Ä–æ–¥–µ–Ω—å–≥–∏ –ú–§–ö",
            last=102.88,
            change_day_pct=0.5,
            trading_status="NormalTrading",
            ytm=25.07,
            duration=162.0,
            currency="RUB",
            board="TQCB",
            market="bonds",
            face_value=1000.0,
            volume=1000.0,
            security_type="bond"
        ),
        BondSnapshot(
            secid="RU000A10CT33",
            shortname="–ê—Ç–æ–º—ç–Ω–µ—Ä–≥–æ–ø—Ä–æ–º",
            last=99.5,
            change_day_pct=-0.2,
            trading_status="NormalTrading",
            ytm=15.69,
            duration=1313.0,
            currency="RUB",
            board="TQCB",
            market="bonds",
            face_value=1000.0,
            volume=500.0,
            security_type="bond"
        ),
        BondSnapshot(
            secid="RU000A104B46",
            shortname="–ë–∞–Ω–∫ –ì–ü–ë",
            last=103.58,
            change_day_pct=0.8,
            trading_status="NormalTrading",
            ytm=15.5,
            duration=1044.0,
            currency="RUB",
            board="TQCB",
            market="bonds",
            face_value=1000.0,
            volume=250.0,
            security_type="bond"
        )
    ]
    
    print(f"üìã –°–æ–∑–¥–∞–Ω–æ {len(test_snapshots)} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–Ω–∞–ø—à–æ—Ç–æ–≤")
    for snapshot in test_snapshots:
        print(f"  - {snapshot.shortname} ({snapshot.security_type}) - SECID: {snapshot.secid}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–ø–ª–∞—Ç –Ω–∞–ø—Ä—è–º—É—é
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º _get_bond_calendar...")
    calendar = await analyzer._get_bond_calendar(test_snapshots)
    
    print(f"üìÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤—ã–ø–ª–∞—Ç:")
    print(f"  - –°–æ–±—ã—Ç–∏–π: {len(calendar)}")
    
    if calendar:
        print(f"  üéâ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–ø–ª–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        for i, event in enumerate(calendar[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å–æ–±—ã—Ç–∏–π
            print(f"    {i+1}. {event.get('name', 'Unknown')}: {event.get('date', 'No date')} - {event.get('value', 'No value')} ‚ÇΩ ({event.get('type', 'unknown')})")
    else:
        print(f"  ‚ùå –ö–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–ø–ª–∞—Ç –ø—É—Å—Ç!")
    
    print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(test_calendar_direct())
