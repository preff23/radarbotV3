#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç AI –∞–Ω–∞–ª–∏–∑–∞
"""
import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

from bot.utils.genapi_client import GenAPIOpenAIAdapter
from dotenv import load_dotenv

load_dotenv()

async def test_simple_analysis():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç AI –∞–Ω–∞–ª–∏–∑–∞"""
    print("üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç AI –∞–Ω–∞–ª–∏–∑–∞...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        api_key = os.getenv("OPENAI_API_KEY", "sk-3lObctPRQiG7Pal1iDyiwQjdcipcvJRHDqvrbFGTmBeK735FUOS9sFevOBYa")
        client = GenAPIOpenAIAdapter(api_key)
        
        print("üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...")
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
        response = await client.chat.completions.create(
            model="gpt-5",
            messages=[
                {"role": "system", "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π."},
                {"role": "user", "content": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ–±–ª–∏–≥–∞—Ü–∏–∏ –ì–∞–∑–ø—Ä–æ–º –Ω–∞ 100,000 —Ä—É–±–ª–µ–π. –ö—Ä–∞—Ç–∫–æ."}
            ],
            max_tokens=4000,
            temperature=0.1
        )
        
        print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {response.choices[0].message.content[:200]}...")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    asyncio.run(test_simple_analysis())
