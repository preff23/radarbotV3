#!/usr/bin/env python3
import asyncio
from bot.handlers.invest_analyst import InvestAnalyst

async def final_comprehensive_test():
    analyst = InvestAnalyst()
    
    print('üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´')
    print('=' * 50)
    
    # –¢–µ—Å—Ç 1: –ù–æ–≤–æ—Å—Ç–∏
    print('\nüì∞ –¢–µ—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π...')
    response = await analyst.chat_with_user('test_user', '–î–∞–π –Ω–æ–≤–æ—Å—Ç–∏ –∫–∞–∫–∏–µ-—Ç–æ —Ö–æ—Ç—è –±—ã')
    news_ok = '–Ω–æ–≤–æ—Å—Ç–∏' in response.lower() and '–æ—à–∏–±–∫–∞' not in response.lower()
    print(f'‚úÖ –ù–æ–≤–æ—Å—Ç–∏: {"–†–ê–ë–û–¢–ê–Æ–¢" if news_ok else "–ù–ï –†–ê–ë–û–¢–ê–Æ–¢"}')
    
    # –¢–µ—Å—Ç 2: –†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    print('\nüìä –¢–µ—Å—Ç —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...')
    response = await analyst.chat_with_user('test_user', '–ö–∞–∫–∏–µ –∏–Ω–¥–µ–∫—Å—ã MOEX?')
    market_ok = 'moex' in response.lower() and '–æ—à–∏–±–∫–∞' not in response.lower()
    print(f'‚úÖ –ò–Ω–¥–µ–∫—Å—ã: {"–†–ê–ë–û–¢–ê–Æ–¢" if market_ok else "–ù–ï –†–ê–ë–û–¢–ê–Æ–¢"}')
    
    # –¢–µ—Å—Ç 3: –í–∞–ª—é—Ç—ã
    print('\nüí± –¢–µ—Å—Ç –≤–∞–ª—é—Ç...')
    response = await analyst.chat_with_user('test_user', '–ö–∞–∫–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç?')
    currency_ok = '–¥–æ–ª–ª–∞—Ä' in response.lower() and '–æ—à–∏–±–∫–∞' not in response.lower()
    print(f'‚úÖ –í–∞–ª—é—Ç—ã: {"–†–ê–ë–û–¢–ê–Æ–¢" if currency_ok else "–ù–ï –†–ê–ë–û–¢–ê–Æ–¢"}')
    
    # –¢–µ—Å—Ç 4: –û–±—â–∏–π —á–∞—Ç
    print('\nüí¨ –¢–µ—Å—Ç –æ–±—â–µ–≥–æ —á–∞—Ç–∞...')
    response = await analyst.chat_with_user('test_user', '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?')
    chat_ok = '–æ—à–∏–±–∫–∞' not in response.lower() and len(response) > 10
    print(f'‚úÖ –ß–∞—Ç: {"–†–ê–ë–û–¢–ê–ï–¢" if chat_ok else "–ù–ï –†–ê–ë–û–¢–ê–ï–¢"}')
    
    print('\n' + '=' * 50)
    all_tests = [news_ok, market_ok, currency_ok, chat_ok]
    passed = sum(all_tests)
    total = len(all_tests)
    
    print(f'üìä –†–ï–ó–£–õ–¨–¢–ê–¢: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ')
    
    if passed == total:
        print('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!')
        print('‚úÖ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–ê!')
    else:
        print('‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò')
    
    return passed == total

if __name__ == "__main__":
    asyncio.run(final_comprehensive_test())
