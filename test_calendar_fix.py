#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤—ã–ø–ª–∞—Ç
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/Users/goretofff/Desktop/radar3.0')

from bot.analytics.portfolio_analyzer import PortfolioAnalyzer
from bot.core.logging import get_logger

logger = get_logger(__name__)

async def test_calendar():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–ø–ª–∞—Ç"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤—ã–ø–ª–∞—Ç...")
    
    analyzer = PortfolioAnalyzer()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º 521751895
    user_id = 521751895
    
    try:
        print(f"üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Ä—Ç—Ñ–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}...")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø—Ä—è–º—É—é
        holdings = await analyzer._load_user_holdings(user_id)
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–∑–∏—Ü–∏–π: {len(holdings)}")
        
        for holding in holdings[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"  - {holding.normalized_name} ({holding.security_type}) - ISIN: {holding.isin}")
        
        result = await analyzer.run_analysis(user_id)
        
        print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω")
        print(f"üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–ø–ª–∞—Ç: {len(result.get('bond_calendar', []))} —Å–æ–±—ã—Ç–∏–π")
        
        if result.get('bond_calendar'):
            print("üéâ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–ø–ª–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            for event in result['bond_calendar'][:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å–æ–±—ã—Ç–∏–π
                print(f"  - {event.get('name', 'Unknown')}: {event.get('date', 'No date')} - {event.get('value', 'No value')} ‚ÇΩ")
        else:
            print("‚ùå –ö–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–ø–ª–∞—Ç –ø—É—Å—Ç")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ø-3 —Ü–µ–Ω–Ω—ã—Ö –±—É–º–∞–≥
        print(f"üìà –¢–æ–ø-3 —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö: {len(result.get('top_stable', []))} –ø–æ–∑–∏—Ü–∏–π")
        print(f"üìâ –¢–æ–ø-3 —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã—Ö: {len(result.get('top_risky', []))} –ø–æ–∑–∏—Ü–∏–π")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_calendar())
