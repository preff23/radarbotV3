#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è
"""

import asyncio
import sys
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

from bot.analytics.portfolio_analyzer import PortfolioAnalyzer
from bot.core.logging import setup_logging, get_logger

setup_logging()
logger = get_logger(__name__)


async def test_portfolio_analysis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è"""
    print("üß™ –¢–ï–°–¢ –ê–ù–ê–õ–ò–ó–ê –ü–û–†–¢–§–ï–õ–Ø")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è
    test_portfolio = {
        "accounts": [
            {
                "account_id": "test_account_1",
                "account_name": "–ë—Ä–æ–∫–µ—Ä—Å–∫–∏–π —Å—á–µ—Ç 5",
                "total_value": 680440.59,
                "holdings": [
                    {
                        "security_name": "–ö–õ–°-–¢—Ä–µ–π–¥ –ë–û-03",
                        "security_type": "bond",
                        "quantity": 100,
                        "current_value": 5943.97,
                        "isin": "RU000A10B2M3"
                    },
                    {
                        "security_name": "–ë—ã—Å—Ç—Ä–æ–¥–µ–Ω—å–≥–∏ 0029-08",
                        "security_type": "bond", 
                        "quantity": 200,
                        "current_value": 160249.24,
                        "isin": "RU000A10CRC4"
                    },
                    {
                        "security_name": "–ì–ú–ö –ù–æ—Ä–∏–ª—å—Å–∫–∏–π –Ω–∏–∫–µ–ª—å –ë–û-001P-14-USD",
                        "security_type": "bond",
                        "quantity": 50,
                        "current_value": 99999.28,
                        "isin": "RU000A10ATB6"
                    }
                ],
                "cash_positions": [
                    {
                        "currency": "RUB",
                        "amount": 326839.58
                    }
                ]
            }
        ]
    }
    
    print(f"üìä –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å: {len(test_portfolio['accounts'])} —Å—á–µ—Ç–æ–≤")
    print(f"üìà –û–±–ª–∏–≥–∞—Ü–∏–π: {sum(len(acc['holdings']) for acc in test_portfolio['accounts'])}")
    print()
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    analyzer = PortfolioAnalyzer()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑
    start_time = time.time()
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞...")
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        from bot.core.db import db_manager, User
        from bot.core.config import config
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        import os
        os.environ['DATABASE_URL'] = 'sqlite:///test_radar_bot.db'
        
        # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º db_manager —Å —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑–æ–π
        from bot.core.db import DatabaseManager
        test_db_manager = DatabaseManager()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = test_db_manager.create_user(
            phone_number="+79151731545",
            telegram_id=123456789,
            username="test_user"
        )
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è
        from bot.core.db import PortfolioHoldingV2, PortfolioAccount, PortfolioCashPosition
        
        # –°–æ–∑–¥–∞–µ–º —Å—á–µ—Ç
        session = test_db_manager.SessionLocal()
        account = test_db_manager.get_or_create_account(
            user_id=user.id,
            account_id="test_account_1",
            session=session,
            account_name="–ë—Ä–æ–∫–µ—Ä—Å–∫–∏–π —Å—á–µ—Ç 5",
            portfolio_value=680440.59
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±–ª–∏–≥–∞—Ü–∏–∏
        test_db_manager.add_holding(
            user_id=user.id,
            raw_name="–ö–õ–°-–¢—Ä–µ–π–¥ –ë–û-03",
            normalized_name="–ö–õ–°-–¢—Ä–µ–π–¥ –ë–û-03",
            normalized_key="–ö–õ–°-–¢—Ä–µ–π–¥ –ë–û-03",
            raw_quantity=100,
            isin="RU000A10B2M3",
            security_type="bond",
            account_internal_id=account.id
        )
        
        test_db_manager.add_holding(
            user_id=user.id,
            raw_name="–ë—ã—Å—Ç—Ä–æ–¥–µ–Ω—å–≥–∏ 0029-08",
            normalized_name="–ë—ã—Å—Ç—Ä–æ–¥–µ–Ω—å–≥–∏ 0029-08",
            normalized_key="–ë—ã—Å—Ç—Ä–æ–¥–µ–Ω—å–≥–∏ 0029-08",
            raw_quantity=200,
            isin="RU000A10CRC4",
            security_type="bond",
            account_internal_id=account.id
        )
        
        test_db_manager.add_holding(
            user_id=user.id,
            raw_name="–ì–ú–ö –ù–æ—Ä–∏–ª—å—Å–∫–∏–π –Ω–∏–∫–µ–ª—å –ë–û-001P-14-USD",
            normalized_name="–ì–ú–ö –ù–æ—Ä–∏–ª—å—Å–∫–∏–π –Ω–∏–∫–µ–ª—å –ë–û-001P-14-USD",
            normalized_key="–ì–ú–ö –ù–æ—Ä–∏–ª—å—Å–∫–∏–π –Ω–∏–∫–µ–ª—å –ë–û-001P-14-USD",
            raw_quantity=50,
            isin="RU000A10ATB6",
            security_type="bond",
            account_internal_id=account.id
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫—ç—à
        from bot.core.db import PortfolioCashPosition
        cash = PortfolioCashPosition(
            user_id=user.id,
            account_internal_id=account.id,
            currency="RUB",
            amount=326839.58
        )
        session.add(cash)
        session.commit()
        session.close()
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
        
        result = await analyzer.run_analysis(user.id)
        
        end_time = time.time()
        duration = end_time - start_time
        
        print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {duration:.2f} —Å–µ–∫—É–Ω–¥")
        print(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(result) if result else 0} —Å–∏–º–≤–æ–ª–æ–≤")
        
        if result:
            print("\nüìã –ü–†–ï–í–¨–Æ –†–ï–ó–£–õ–¨–¢–ê–¢–ê:")
            print("-" * 30)
            print(result[:500] + "..." if len(result) > 500 else result)
        
    except Exception as e:
        end_time = time.time()
        duration = end_time - start_time
        
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞ {duration:.2f} —Å–µ–∫—É–Ω–¥: {e}")
        logger.error(f"Test analysis failed: {e}", exc_info=True)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏
        import traceback
        print("\nüîç –î–ï–¢–ê–õ–ò –û–®–ò–ë–ö–ò:")
        print(traceback.format_exc())


if __name__ == "__main__":
    asyncio.run(test_portfolio_analysis())
