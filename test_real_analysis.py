#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º –≤—ã–ø–ª–∞—Ç
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/Users/goretofff/Desktop/radar3.0')

from bot.analytics.portfolio_analyzer import PortfolioAnalyzer
from bot.core.logging import get_logger

logger = get_logger(__name__)

async def test_real_analysis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è...")
    
    analyzer = PortfolioAnalyzer()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–±–ª–∏–≥–∞—Ü–∏—è–º–∏
    test_user_id = 999999  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π ID
    
    print(f"üìä –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±–ª–∏–≥–∞—Ü–∏–∏
    from bot.core.db import DatabaseManager
    db_manager = DatabaseManager()
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = db_manager.create_user(
        telegram_id=test_user_id,
        phone_number="+79999999999",
        username="test_user"
    )
    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user.id}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –æ–±–ª–∏–≥–∞—Ü–∏–∏
    test_bonds = [
        {
            "raw_name": "–ë—ã—Å—Ç—Ä–æ–¥–µ–Ω—å–≥–∏ –ú–§–ö",
            "normalized_name": "–ë—ã—Å—Ç—Ä–æ–¥–µ–Ω—å–≥–∏ –ú–§–ö",
            "normalized_key": "RU000A10B2M3",
            "ticker": "RU000A10B2M3",
            "isin": "RU000A10B2M3",
            "security_type": "bond",
            "raw_quantity": 100,
            "raw_quantity_unit": "—à—Ç"
        },
        {
            "raw_name": "–ê—Ç–æ–º—ç–Ω–µ—Ä–≥–æ–ø—Ä–æ–º",
            "normalized_name": "–ê—Ç–æ–º—ç–Ω–µ—Ä–≥–æ–ø—Ä–æ–º",
            "normalized_key": "RU000A10CT33",
            "ticker": "RU000A10CT33", 
            "isin": "RU000A10CT33",
            "security_type": "bond",
            "raw_quantity": 50,
            "raw_quantity_unit": "—à—Ç"
        },
        {
            "raw_name": "–ë–∞–Ω–∫ –ì–ü–ë",
            "normalized_name": "–ë–∞–Ω–∫ –ì–ü–ë",
            "normalized_key": "RU000A104B46",
            "ticker": "RU000A104B46",
            "isin": "RU000A104B46", 
            "security_type": "bond",
            "raw_quantity": 25,
            "raw_quantity_unit": "—à—Ç"
        }
    ]
    
    for bond_data in test_bonds:
        holding = db_manager.add_holding(
            user_id=user.id,
            **bond_data
        )
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–±–ª–∏–≥–∞—Ü–∏—è: {holding.normalized_name}")
    
    print(f"\nüìã –í—Å–µ–≥–æ –ø–æ–∑–∏—Ü–∏–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {len(db_manager.get_user_holdings(user.id))}")
    
    # –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑
    print(f"\nüîç –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    print(f"üîç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
    holdings = db_manager.get_user_holdings(user.id)
    for holding in holdings:
        print(f"  - {holding.normalized_name} ({holding.security_type}) - ISIN: {holding.isin}")
    
    result = await analyzer.run_analysis(user.id)
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:")
    print(f"  - –û—à–∏–±–∫–∞: {result.get('error', '–ù–µ—Ç')}")
    print(f"  - –ö–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–ø–ª–∞—Ç: {len(result.get('bond_calendar', []))} —Å–æ–±—ã—Ç–∏–π")
    print(f"  - –¢–æ–ø-3 —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö: {len(result.get('top_stable', []))} –ø–æ–∑–∏—Ü–∏–π")
    print(f"  - –¢–æ–ø-3 —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã—Ö: {len(result.get('top_risky', []))} –ø–æ–∑–∏—Ü–∏–π")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–ø–ª–∞—Ç
    if result.get('bond_calendar'):
        print(f"\nüìÖ –ö–ê–õ–ï–ù–î–ê–†–¨ –í–´–ü–õ–ê–¢:")
        for i, event in enumerate(result['bond_calendar'][:10]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 —Å–æ–±—ã—Ç–∏–π
            print(f"  {i+1}. {event.get('name', 'Unknown')}: {event.get('date', 'No date')} - {event.get('value', 'No value')} ‚ÇΩ ({event.get('type', 'unknown')})")
    else:
        print(f"\n‚ùå –ö–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–ø–ª–∞—Ç –ø—É—Å—Ç!")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-3 —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö
    if result.get('top_stable'):
        print(f"\nüìà –¢–û–ü-3 –°–¢–ê–ë–ò–õ–¨–ù–´–• –¶–ï–ù–ù–´–• –ë–£–ú–ê–ì:")
        for i, position in enumerate(result['top_stable']):
            print(f"  {i+1}. {position.get('name', 'Unknown')} ({position.get('type', 'unknown')}) - YTM: {position.get('ytm', 'N/A')}%, –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {position.get('change_pct', 'N/A')}%")
    else:
        print(f"\n‚ùå –°—Ç–∞–±–∏–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-3 —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã—Ö
    if result.get('top_risky'):
        print(f"\nüìâ –¢–û–ü-3 –†–ò–°–ö–û–í–ê–ù–ù–´–• –¶–ï–ù–ù–´–• –ë–£–ú–ê–ì:")
        for i, position in enumerate(result['top_risky']):
            print(f"  {i+1}. {position.get('name', 'Unknown')} ({position.get('type', 'unknown')}) - YTM: {position.get('ytm', 'N/A')}%, –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {position.get('change_pct', 'N/A')}%")
    else:
        print(f"\n‚ùå –†–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print(f"\nüßπ –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
    # –£–¥–∞–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    holdings = db_manager.get_user_holdings(user.id)
    for holding in holdings:
        holding.is_active = False
    db_manager.SessionLocal().commit()
    print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã")
    
    print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(test_real_analysis())
