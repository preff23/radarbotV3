#!/usr/bin/env python3
"""
–¢–µ—Å—Ç gen-api.ru —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º API
"""
import asyncio
import os
import sys
import time
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from bot.utils.genapi_client import GenAPIClient, GenAPIOpenAIAdapter

async def test_genapi_real():
    """–¢–µ—Å—Ç gen-api.ru —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º API"""
    print("üîç –¢–µ—Å—Ç gen-api.ru —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º API...")
    
    api_key = "sk-sYaKAn8J4zmc7NhbDmrSmO2hSwDZ0xS6g1JWtD8LM1CT7gla8fksbvUDFHsf"
    
    try:
        # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π API
        print("üìã –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π API gen-api.ru...")
        client = GenAPIClient(api_key)
        
        messages = [
            {"role": "system", "content": "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∞–Ω–∞–ª–∏–∑—É –ø–æ—Ä—Ç—Ñ–µ–ª–µ–π."},
            {"role": "user", "content": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –∏–∑ 3 –æ–±–ª–∏–≥–∞—Ü–∏–π: –ê, –ë, –í. –î–∞–π –∫—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑."}
        ]
        
        start_time = time.time()
        result = await client.chat_completion(messages, max_tokens=500)
        end_time = time.time()
        duration = end_time - start_time
        
        print(f"‚úÖ –ü—Ä—è–º–æ–π API: {duration:.2f} —Å–µ–∫")
        print(f"üìù –û—Ç–≤–µ—Ç: {result[:200]}...")
        
        # –¢–µ—Å—Ç 2: –ê–¥–∞–ø—Ç–µ—Ä OpenAI
        print("\nüìã –¢–µ—Å—Ç 2: –ê–¥–∞–ø—Ç–µ—Ä OpenAI...")
        adapter = GenAPIOpenAIAdapter(api_key)
        
        start_time = time.time()
        response = await adapter.chat.completions.create(
            model="gpt-4o-mini",
            messages=messages,
            max_tokens=500
        )
        end_time = time.time()
        duration = end_time - start_time
        
        print(f"‚úÖ –ê–¥–∞–ø—Ç–µ—Ä OpenAI: {duration:.2f} —Å–µ–∫")
        print(f"üìù –û—Ç–≤–µ—Ç: {response.choices[0].message.content[:200]}...")
        
        # –¢–µ—Å—Ç 3: –ë–æ–ª—å—à–æ–π –ø—Ä–æ–º–ø—Ç
        print("\nüìã –¢–µ—Å—Ç 3: –ë–æ–ª—å—à–æ–π –ø—Ä–æ–º–ø—Ç...")
        big_messages = [
            {"role": "system", "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –ø–æ—Ä—Ç—Ñ–µ–ª–µ–π –æ–±–ª–∏–≥–∞—Ü–∏–π. –î–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑."},
            {"role": "user", "content": f"""
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ—Ä—Ç—Ñ–µ–ª—å:

–î–ê–ù–ù–´–ï –ü–û–†–¢–§–ï–õ–Ø:
{{
    "positions": [
        {{"name": "–û–±–ª–∏–≥–∞—Ü–∏—è –ê", "ticker": "BOND001", "type": "bond", "price": 100.0, "ytm": 10.0, "quantity": 10}},
        {{"name": "–û–±–ª–∏–≥–∞—Ü–∏—è –ë", "ticker": "BOND002", "type": "bond", "price": 105.0, "ytm": 12.0, "quantity": 15}},
        {{"name": "–û–±–ª–∏–≥–∞—Ü–∏—è –í", "ticker": "BOND003", "type": "bond", "price": 95.0, "ytm": 8.0, "quantity": 20}}
    ],
    "total_value": 5000.0,
    "bond_count": 3
}}

–î–∞–π –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.
"""}
        ]
        
        start_time = time.time()
        response = await adapter.chat.completions.create(
            model="gpt-4o-mini",
            messages=big_messages,
            max_tokens=2000
        )
        end_time = time.time()
        duration = end_time - start_time
        
        print(f"‚úÖ –ë–æ–ª—å—à–æ–π –ø—Ä–æ–º–ø—Ç: {duration:.2f} —Å–µ–∫")
        print(f"üìù –û—Ç–≤–µ—Ç: {response.choices[0].message.content[:300]}...")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã gen-api.ru –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ gen-api.ru: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    asyncio.run(test_genapi_real())
