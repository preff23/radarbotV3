#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Ç–ª–∞–¥–∫–∏ payload –¥–ª—è AI
"""
import asyncio
import sys
import os
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

from bot.analytics.portfolio_analyzer import PortfolioAnalyzer

async def test_payload_debug():
    """–¢–µ—Å—Ç –æ—Ç–ª–∞–¥–∫–∏ payload"""
    print("üß™ –¢–µ—Å—Ç –æ—Ç–ª–∞–¥–∫–∏ payload –¥–ª—è AI...")
    
    try:
        analyzer = PortfolioAnalyzer()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–∞–∫—Ä–æ –¥–∞–Ω–Ω—ã—Ö
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–∞–∫—Ä–æ –¥–∞–Ω–Ω—ã—Ö...")
        macro_data = await analyzer._get_macro_data()
        print(f"‚úÖ –ú–∞–∫—Ä–æ –¥–∞–Ω–Ω—ã–µ: {json.dumps(macro_data, ensure_ascii=False, indent=2)}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π
        print("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π...")
        news = await analyzer._get_news([])
        print(f"‚úÖ –ù–æ–≤–æ—Å—Ç–∏: {len(news)} —Å—Ç–∞—Ç–µ–π")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        print("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è...")
        calendar = await analyzer._get_bond_calendar([])
        print(f"‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å: {len(calendar)} —Å–æ–±—ã—Ç–∏–π")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏—Å—Ç–æ—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π
        print("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏—Å—Ç–æ—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π...")
        payment_history = await analyzer._get_payment_history([])
        print(f"‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π: {len(payment_history)} –∑–∞–ø–∏—Å–µ–π")
        
        print("\n‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    asyncio.run(test_payload_debug())
