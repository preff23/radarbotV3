#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ NeuroAPI
"""
import asyncio
import sys
import os
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

import openai
from dotenv import load_dotenv

load_dotenv()

async def test_neuroapi_speed():
    """–¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ NeuroAPI"""
    print("üß™ –¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ NeuroAPI...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        api_key = os.getenv("OPENAI_API_KEY", "sk-ljmNZVQv5Fjdom5CMlelMKjbZtpjRDYeqjdtzFJXJSZtWsx8")
        client = openai.AsyncOpenAI(
            api_key=api_key,
            base_url="https://neuroapi.host/v1",
            timeout=120.0,
            max_retries=3
        )
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
        print("üîÑ –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å...")
        start_time = time.time()
        
        response = await client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π."},
                {"role": "user", "content": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ–±–ª–∏–≥–∞—Ü–∏–∏ –ì–∞–∑–ø—Ä–æ–º –Ω–∞ 100,000 —Ä—É–±–ª–µ–π. –ö—Ä–∞—Ç–∫–æ."}
            ],
            max_tokens=1000,
            temperature=0.1
        )
        
        end_time = time.time()
        duration1 = end_time - start_time
        print(f"‚úÖ –¢–µ—Å—Ç 1 –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {duration1:.2f} —Å–µ–∫—É–Ω–¥")
        print(f"üìù –û—Ç–≤–µ—Ç: {response.choices[0].message.content[:100]}...")
        
        # –¢–µ—Å—Ç 2: –ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        print("\nüîÑ –¢–µ—Å—Ç 2: –°–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å...")
        start_time = time.time()
        
        response = await client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –î–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è."},
                {"role": "user", "content": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ—Ä—Ç—Ñ–µ–ª—å: 10 –æ–±–ª–∏–≥–∞—Ü–∏–π –ì–∞–∑–ø—Ä–æ–º–∞ –Ω–∞ 500,000 —Ä—É–±, 5 –æ–±–ª–∏–≥–∞—Ü–∏–π –°–±–µ—Ä–±–∞–Ω–∫–∞ –Ω–∞ 300,000 —Ä—É–±, 3 –æ–±–ª–∏–≥–∞—Ü–∏–∏ –í–¢–ë –Ω–∞ 200,000 —Ä—É–±. –û—Ü–µ–Ω–∏ —Ä–∏—Å–∫–∏, –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å, –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—é."}
            ],
            max_tokens=2000,
            temperature=0.1
        )
        
        end_time = time.time()
        duration2 = end_time - start_time
        print(f"‚úÖ –¢–µ—Å—Ç 2 –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {duration2:.2f} —Å–µ–∫—É–Ω–¥")
        print(f"üìù –û—Ç–≤–µ—Ç: {response.choices[0].message.content[:100]}...")
        
        # –¢–µ—Å—Ç 3: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        print("\nüîÑ –¢–µ—Å—Ç 3: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å...")
        start_time = time.time()
        
        response = await client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –î–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏."},
                {"role": "user", "content": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ—Ä—Ç—Ñ–µ–ª—å: 15 –æ–±–ª–∏–≥–∞—Ü–∏–π –ì–∞–∑–ø—Ä–æ–º–∞ –Ω–∞ 1,000,000 —Ä—É–±, 10 –æ–±–ª–∏–≥–∞—Ü–∏–π –°–±–µ—Ä–±–∞–Ω–∫–∞ –Ω–∞ 800,000 —Ä—É–±, 8 –æ–±–ª–∏–≥–∞—Ü–∏–π –í–¢–ë –Ω–∞ 600,000 —Ä—É–±, 5 –æ–±–ª–∏–≥–∞—Ü–∏–π –õ—É–∫–æ–π–ª–∞ –Ω–∞ 400,000 —Ä—É–±, 3 –æ–±–ª–∏–≥–∞—Ü–∏–∏ –†–æ—Å–Ω–µ—Ñ—Ç–∏ –Ω–∞ 300,000 —Ä—É–±. –û—Ü–µ–Ω–∏ —Ä–∏—Å–∫–∏, –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å, –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—é, –¥–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏."}
            ],
            max_tokens=4000,
            temperature=0.1
        )
        
        end_time = time.time()
        duration3 = end_time - start_time
        print(f"‚úÖ –¢–µ—Å—Ç 3 –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {duration3:.2f} —Å–µ–∫—É–Ω–¥")
        print(f"üìù –û—Ç–≤–µ—Ç: {response.choices[0].message.content[:100]}...")
        
        # –ò—Ç–æ–≥–∏
        print(f"\nüìä –ò—Ç–æ–≥–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏:")
        print(f"   –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å: {duration1:.2f} —Å–µ–∫")
        print(f"   –°–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å: {duration2:.2f} —Å–µ–∫")
        print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å: {duration3:.2f} —Å–µ–∫")
        print(f"   –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å: {(duration1 + duration2 + duration3) / 3:.2f} —Å–µ–∫")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    asyncio.run(test_neuroapi_speed())
