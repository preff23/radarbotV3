#!/usr/bin/env python3
"""
–¢–µ—Å—Ç AI –∞–Ω–∞–ª–∏–∑–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""
import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

from bot.analytics.portfolio_analyzer import PortfolioAnalyzer
from bot.core.db import db_manager, User, PortfolioAccount, PortfolioHoldingV2, PortfolioCashPosition
from dotenv import load_dotenv

load_dotenv()

async def test_ai_analysis_with_user():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º AI –∞–Ω–∞–ª–∏–∑ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º AI –∞–Ω–∞–ª–∏–∑ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    try:
        session = db_manager.SessionLocal()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user = User(
            telegram_id=123456789,
            phone_number="+79151731545",
            first_name="Test",
            last_name="User"
        )
        session.add(test_user)
        session.commit()
        session.refresh(test_user)
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.id}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—á–µ—Ç
        test_account = PortfolioAccount(
            user_id=test_user.id,
            account_id="test_account_1",
            account_name="–¢–µ—Å—Ç–æ–≤—ã–π —Å—á–µ—Ç",
            account_type="broker",
            portfolio_value=100000.0
        )
        session.add(test_account)
        session.commit()
        session.refresh(test_account)
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Å—á–µ—Ç: {test_account.id}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏
        test_holding = PortfolioHoldingV2(
            user_id=test_user.id,
            account_internal_id=test_account.id,
            raw_name="–ì–∞–∑–ø—Ä–æ–º –ë–û-001–†-02",
            normalized_name="–ì–∞–∑–ø—Ä–æ–º –ë–û-001–†-02",
            raw_isin="RU000A0JX0S9",
            isin="RU000A0JX0S9",
            raw_ticker="–ì–ê–ó–ü–†–û–ú –ë–û-001–†-02",
            ticker="–ì–ê–ó–ü–†–û–ú –ë–û-001–†-02",
            raw_type="bond",
            security_type="bond",
            raw_quantity=10,
            current_price=1000.0,
            normalized_key="–ì–ê–ó–ü–†–û–ú –ë–û-001–†-02"
        )
        session.add(test_holding)
        
        # –°–æ–∑–¥–∞–µ–º –∫—ç—à –ø–æ–∑–∏—Ü–∏—é
        test_cash = PortfolioCashPosition(
            user_id=test_user.id,
            account_internal_id=test_account.id,
            raw_name="–†—É–±–ª–∏",
            currency="RUB",
            amount=50000.0
        )
        session.add(test_cash)
        
        session.commit()
        print("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏")
        
        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
        analyzer = PortfolioAnalyzer()
        
        print("üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
        result = await analyzer.run_analysis(test_user.id)
        
        print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get('ai_analysis', '–ù–µ—Ç –∞–Ω–∞–ª–∏–∑–∞')[:200]}...")
        
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        session.delete(test_holding)
        session.delete(test_cash)
        session.delete(test_account)
        session.delete(test_user)
        session.commit()
        
        session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    asyncio.run(test_ai_analysis_with_user())
