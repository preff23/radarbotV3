#!/usr/bin/env python3
"""
–ß–∏—Å—Ç—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
"""

import os
import sys
import signal
import subprocess
import time
from pathlib import Path

def kill_existing_processes():
    """–£–±–∏–≤–∞–µ—Ç –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞"""
    print("üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
    
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    kill_commands = [
        "pkill -f 'python.*main.py'",
        "pkill -f 'monitor_system.py'", 
        "pkill -f 'miniapp/backend/main.py'"
    ]
    
    for cmd in kill_commands:
        try:
            os.system(cmd)
        except:
            pass
    
    time.sleep(2)
    print("‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

def start_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
        process = subprocess.Popen([
            sys.executable, "main.py"
        ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        
        print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å PID: {process.pid}")
        return process
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        return None

def start_api():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç API —Å–µ—Ä–≤–µ—Ä"""
    print("üåê –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º API –≤ —Ñ–æ–Ω–µ
        process = subprocess.Popen([
            sys.executable, "miniapp/backend/main.py"
        ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        
        print(f"‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å PID: {process.pid}")
        return process
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ API: {e}")
        return None

def signal_handler(signum, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤"""
    print(f"\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã...")
    kill_existing_processes()
    sys.exit(0)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ RADARBOT 3.0 - –ß–ò–°–¢–´–ô –ó–ê–ü–£–°–ö")
    print("=" * 50)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    kill_existing_processes()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    processes = []
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    bot_process = start_bot()
    if bot_process:
        processes.append(("–ë–æ—Ç", bot_process))
    
    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
    time.sleep(3)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º API
    api_process = start_api()
    if api_process:
        processes.append(("API", api_process))
    
    if not processes:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞")
        return 1
    
    print("\nüéâ –°–ò–°–¢–ï–ú–ê –ó–ê–ü–£–©–ï–ù–ê!")
    print("=" * 50)
    print("ü§ñ –ë–æ—Ç: –∞–∫—Ç–∏–≤–µ–Ω")
    print("üåê API: http://localhost:8000")
    print("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://localhost:8000/api/health/")
    print("=" * 50)
    print("‚èπÔ∏è –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    
    try:
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        while True:
            for name, process in processes:
                if process.poll() is not None:
                    print(f"‚ö†Ô∏è {name} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º {process.returncode}")
                    if name == "–ë–æ—Ç":
                        print("‚ùå –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É")
                        kill_existing_processes()
                        return process.returncode
            
            time.sleep(1)
    
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    finally:
        kill_existing_processes()
        print("üëã –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    
    return 0

if __name__ == "__main__":
    sys.exit(main())
