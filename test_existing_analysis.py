#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""
import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

from bot.analytics.portfolio_analyzer import PortfolioAnalyzer
from bot.core.db import db_manager

async def test_existing_analysis():
    """–¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("üß™ –¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
        users = db_manager.get_all_users()
        if not users:
            print("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        test_user = users[0]
        print(f"üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {test_user.first_name} {test_user.last_name} (ID: {test_user.id})")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
        analyzer = PortfolioAnalyzer()
        print("üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑...")
        
        result = await analyzer.run_analysis(test_user.id)
        
        if "error" in result:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {result['error']}")
            return False
        
        print("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get('summary', '–ù–µ—Ç summary')[:200]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–∫—Ä–æ –¥–∞–Ω–Ω—ã–µ
        if 'macro_data' in result:
            print(f"‚úÖ –ú–∞–∫—Ä–æ –¥–∞–Ω–Ω—ã–µ: {result['macro_data']}")
        else:
            print("‚ùå –ú–∞–∫—Ä–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        if 'bond_calendar' in result:
            print(f"‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –æ–±–ª–∏–≥–∞—Ü–∏–π: {len(result['bond_calendar'])} —Å–æ–±—ã—Ç–∏–π")
        else:
            print("‚ùå –ö–∞–ª–µ–Ω–¥–∞—Ä—å –æ–±–ª–∏–≥–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏
        if 'news' in result:
            print(f"‚úÖ –ù–æ–≤–æ—Å—Ç–∏: {len(result['news'])} —Å—Ç–∞—Ç–µ–π")
        else:
            print("‚ùå –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–ª–∞—Ç–µ–∂–µ–π
        if 'payment_history' in result:
            print(f"‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π: {len(result['payment_history'])} –∑–∞–ø–∏—Å–µ–π")
        else:
            print("‚ùå –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏–∏
        if 'positions' in result:
            print(f"‚úÖ –ü–æ–∑–∏—Ü–∏–∏: {len(result['positions'])} –ø–æ–∑–∏—Ü–∏–π")
            for pos in result['positions'][:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2
                print(f"   - {pos.get('name', 'N/A')}: {pos.get('last_price', 'N/A')} {pos.get('currency', 'N/A')}")
        else:
            print("‚ùå –ü–æ–∑–∏—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    asyncio.run(test_existing_analysis())
