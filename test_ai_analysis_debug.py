#!/usr/bin/env python3
"""
–¢–µ—Å—Ç AI –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –æ—à–∏–±–æ–∫
"""
import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

from bot.analytics.portfolio_analyzer import PortfolioAnalyzer
from bot.core.db import db_manager, User
from dotenv import load_dotenv

load_dotenv()

async def test_ai_analysis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º AI –∞–Ω–∞–ª–∏–∑"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º AI –∞–Ω–∞–ª–∏–∑...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        session = db_manager.SessionLocal()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        test_user = session.query(User).filter(User.telegram_id == 123456789).first()
        if not test_user:
            print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.telegram_id}")
        
        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
        analyzer = PortfolioAnalyzer()
        
        print("üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
        result = await analyzer.run_analysis(test_user.id)
        
        print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get('ai_analysis', '–ù–µ—Ç –∞–Ω–∞–ª–∏–∑–∞')[:200]}...")
        
        session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    asyncio.run(test_ai_analysis())
